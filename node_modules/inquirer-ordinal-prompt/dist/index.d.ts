/// <reference types="node" />
import { Interface as ReadLineInterface } from 'readline';
import { Answers, ListQuestionOptions } from 'inquirer';
import Base = require('inquirer/lib/prompts/base');
declare type ImplicitState = {
    value: string;
    isValid: boolean;
};
export declare class OrdinalPrompt extends Base<ListQuestionOptions> {
    firstRender: boolean;
    private values;
    private pointer;
    private readonly paginator;
    private done;
    private spaceKeyPressed;
    constructor(question: ListQuestionOptions, rl: ReadLineInterface, answers?: Answers);
    /**
     * Start the Inquiry session
     * @param cb - Callback when prompt is done
     */
    _run(cb: Function): OrdinalPrompt;
    /**
     * Render the prompt to screen
     */
    render(error?: boolean): void;
    /**
     * When user press `enter` key
     */
    onEnd(state: ImplicitState): void;
    onError(state: ImplicitState): void;
    getCurrentValue(): Array<string>;
    onUpKey(): void;
    onDownKey(): void;
    onNumberKey(input: number): void;
    onSpaceKey(): void;
    onResetKey(): void;
    toggleChoice(index: number): void;
}
export default OrdinalPrompt;
